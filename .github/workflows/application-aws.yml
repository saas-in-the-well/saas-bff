name: saas-bff application deploy

on:
  push:
    branches: [ 'develop' ]
  pull_request:
    branches: [ 'develop' ]

env:
  APP_NAME: saas-bff
  BRANCH_NAME: develop

permissions:
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-application-jar
          path: build/libs/*.jar

  push-docker-image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-application-jar
          path: build/libs

      - name: Set AWS OIDC ROLE
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          role-session-name: ecrRoleSession
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Docker image
        run: |
          docker build . -t ${{ secrets.AWS_ECR_URL }}/${{ env.APP_NAME }}:${{ env.BRANCH_NAME }}-${{ github.sha }} --build-arg VERSION=${{ github.sha }}
          docker push ${{ secrets.AWS_ECR_URL }}/${{ env.APP_NAME }}:${{ env.BRANCH_NAME }}-${{ github.sha }}

  update-deployment:
    needs: push-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: checkout saas-kubernetes
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SAAS_GITHUB_TOKEN }}
          repository: ${{ vars.SAAS_KUBE_REPOSITORY }}
          ref: ${{ env.BRANCH_NAME }}

      - name: Pull Latest Code
        run: |
          git pull origin ${{ env.BRANCH_NAME }}

      - name: push Kubernetes Manifest
        run: |
          sed -i 's|${{ secrets.AWS_ECR_URL }}/${{ env.APP_NAME }}:.*|${{ secrets.AWS_ECR_URL }}/${{ env.APP_NAME }}:${{ env.BRANCH_NAME }}-${{ github.sha }}|' kube/${{ env.BRANCH_NAME }}/${{ env.APP_NAME }}.yaml
          git config user.email ${{ vars.SAAS_GITHUB_EMAIL }}
          git config user.name ${{ vars.SAAS_GITHUB_NAME }}
          git add kube/${{ env.BRANCH_NAME }}/${{ env.APP_NAME }}.yaml
          git commit -m "Update image tag to ${{ github.sha }}"
          git push origin ${{ env.BRANCH_NAME }}
